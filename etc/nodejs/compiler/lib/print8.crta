div:
mov b 0
div_loop:
add ax -0d10
test al
jnc div_ret
; add b 1
  push ax
  mov al b
  add ax 1
  mov b al
  pop ax
jmp div_loop
div_ret:
add ax 0d10
ret

print_priv:
test al
jz print_priv_ret
call div
push ax 
mov al b
call print_priv
pop ax
add ax '0'
print al
print_priv_ret:
ret

print_zero:
mov ax '0'
print al
jmp print_ret

print:
push ax
test al
jz print_zero
call print_priv
print_ret:
mov ax ' '
print al
pop ax
ret